{"version":3,"sources":["initialState.js","RutinasContext.js","section/Links/Links.js","components/Modal/Modal.js","components/Rutina/Rutina.js","section/SwitchComponents/SwitchComponents.js","App.js","serviceWorker.js","index.js"],"names":["initialState","rutinas","day","exercise","series","break","RutinasContext","createContext","links","path","name","Links","location","useLocation","className","map","link","key","to","pathname","data","Modal","dispatch","useContext","useState","values","setValues","setDataInput","event","target","value","state","useEffect","placeholder","onChange","onClick","type","payload","Row","serie","e","delete","Rutina","rutina","SwitchComponent","filter","App","useReducer","action","console","log","clon","index","findIndex","rut","splice","Error","Provider","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.70d1def4.chunk.js","sourcesContent":["const initialState = {\n  rutinas: [\n    {\n      day: \"monday\",\n      exercise: \"sentadilla\",\n      series: \"3\",\n      break: \"2 min\"\n    },\n   \n    \n  ]\n};\n\nexport default initialState;\n","\nimport { createContext } from \"react\";\n\nconst RutinasContext = createContext([]);\n\nexport default RutinasContext;\n\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"./Links.scss\";\n\nconst links = [\n  {\n    path: \"/monday\",\n    name: \"Monday\",\n  },\n  {\n    path: \"/tuesday\",\n    name: \"Tuesday\",\n  },\n  {\n    path: \"/wednesday\",\n    name: \"Wednesday\",\n  },\n  {\n    path: \"/thursday\",\n    name: \"Thursday\",\n  },\n  {\n    path: \"/friday\",\n    name: \"Friday\",\n  },\n];\n\nconst Links = () => {\n  let location = useLocation();\n\n  return (\n    <div className=\"wrapper\">\n      <nav className=\"nav\">\n        {links.map((link, key) => (\n          <Link\n            key={key}\n            to={link.path}\n            className={location.pathname === link.path ? \"active\" : \"\"}\n          >\n            {link.name}\n          </Link>\n        ))}\n      </nav>\n    </div>\n  );\n};\n\nexport default Links;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport \"./Modal.scss\";\nimport RutinasContext from \"../../RutinasContext\";\n\nlet data = {\n  day: \"\",\n  exercise: \"\",\n  series: \"\",\n  break: \"\",\n};\n\nconst Modal = ({ day }) => {\n  const { dispatch } = useContext(RutinasContext);\n\n  const [values, setValues] = useState(data);\n\n  const setDataInput = (event) => {\n    let { name, value } = event.target;\n\n    setValues((state) => {\n      return { ...state, [name]: value };\n    });\n  };\n  const add = () => {\n    dispatch({ type: \"add\", payload: values });\n    setValues((state) => {\n      return { ...data, day };\n    });\n  };\n\n  useEffect(() => {\n    setValues((state) => {\n      return { ...state, day };\n    });\n  }, [day]);\n\n  return (\n    <div className=\"modalAdd\">\n      <h2>Add excercise</h2>\n      <div className=\"wrapper-data\">\n        <input\n          value={values.exercise}\n          className=\"input\"\n          name=\"exercise\"\n          placeholder=\"exercise\"\n          onChange={setDataInput}\n        ></input>\n        <input\n          value={values.series}\n          className=\"input\"\n          name=\"series\"\n          placeholder=\"Series\"\n          onChange={setDataInput}\n        ></input>\n        <select\n          value={values.break}\n          className=\"input\"\n          name=\"break\"\n          onChange={setDataInput}\n        >\n          <option value=\"break\">Break</option>\n          <option value=\"2min\">2 min</option>\n          <option value=\"3min\">3 min</option>\n          <option value=\"4min\">4 min</option>\n          <option value=\"5min\">5 min</option>\n        </select>\n        <button onClick={add} className=\"add\">\n          Add\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useContext } from \"react\";\nimport RutinasContext from \"../../RutinasContext\";\nimport Modal from \"../Modal/Modal\";\n\nimport \"./Rutina.scss\";\n\nconst Rutina = ({ rutina, type, day }) => {\n  return (\n    <div className={type}>\n      {/* <h1 className='title'>{props.title}</h1> */}\n      <table className=\"table\">\n        <thead>\n          <tr className=\"filas\">\n            <th className=\"fila\">Exercises</th>\n            <th className=\"fila\">Series</th>\n            <th className=\"fila\">Break</th>\n            <th className=\"fila\">Option</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rutina.map((serie, key) => {\n            return <Row serie={serie} key={key} />;\n          })}\n        </tbody>\n      </table>\n\n      <Modal day={day} />\n    </div>\n  );\n};\n\nconst Row = ({ serie }) => {\n  const { dispatch } = useContext(RutinasContext);\n\n  return (\n    <tr>\n      <td>{serie.exercise}</td>\n      <td>{serie.series}</td>\n      <td>{serie.break}</td>\n      <td>\n        <span\n          onClick={(e) =>\n            dispatch({\n              type: \"delete\",\n              payload: {\n                day: serie.day,\n                exercise: serie.exercise,\n              },\n            })\n          }\n          className=\"delete\"\n        >\n          <i className=\"fas fa-trash-alt\"></i>\n          {serie.delete}\n        </span>\n      </td>\n    </tr>\n  );\n};\n\nexport default Rutina;\n","import React, { useContext } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Rutina from \"../../components/Rutina/Rutina\";\nimport RutinasContext from \"../../RutinasContext\";\n\nconst SwitchComponent = () => {\n  const { state } = useContext(RutinasContext);\n  return (\n    <Switch>\n      <Route path=\"/monday\">\n        <Rutina\n          day=\"monday\"\n          type=\"day\"\n          rutina={state.rutinas.filter((day) => day.day === \"monday\")}\n        />\n      </Route>\n      <Route path=\"/tuesday\">\n        <Rutina\n          day=\"tuesday\"\n          type=\"day\"\n          rutina={state.rutinas.filter((day) => day.day === \"tuesday\")}\n        />\n      </Route>\n\n      <Route path=\"/wednesday\">\n        <Rutina\n          day=\"wednesday\"\n          type=\"day\"\n          rutina={state.rutinas.filter((day) => day.day === \"wednesday\")}\n        />\n      </Route>\n\n      <Route path=\"/thursday\">\n        <Rutina\n          day=\"thursday\"\n          type=\"day\"\n          rutina={state.rutinas.filter((day) => day.day === \"thursday\")}\n        />\n      </Route>\n\n      <Route path=\"/friday\">\n        <Rutina\n          day=\"friday\"\n          type=\"day\"\n          rutina={state.rutinas.filter((day) => day.day === \"friday\")}\n        />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default SwitchComponent;\n","import React, { useReducer } from \"react\";\nimport \"./App.css\";\nimport initialState from \"./initialState\";\nimport RutinasContext from \"./RutinasContext\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Links from \"./section/Links/Links\";\nimport SwitchComponent from \"./section/SwitchComponents/SwitchComponents\";\n\nconst App = () => {\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"add\":\n        console.log(\"state when add ... \", state);\n        console.log(\"payload .. \", action.payload);\n        return { rutinas: [...state.rutinas, action.payload] };\n      case \"delete\":\n        const clon = { ...state };\n        //rutina y ejercicio\n        // action.payload.rutina , action.payload.ejercicio\n        const index = clon.rutinas.findIndex(\n          (rut) =>\n            rut.day === action.payload.day &&\n            rut.exercise === action.payload.exercise\n        );\n        clon.rutinas.splice(index, 1);\n        return clon;\n      default:\n        throw new Error();\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <RutinasContext.Provider value={{ state, dispatch }}>\n      <div>\n        <h1 className=\"title\">GYM - EXERCISE ROUTINE</h1>\n        <BrowserRouter>\n          <Links />\n          <SwitchComponent />\n        </BrowserRouter>\n      </div>\n    </RutinasContext.Provider>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}